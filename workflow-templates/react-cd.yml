# This workflow performs Continous Deployment activities for a React application.
#
# To use this workflow, perform the following set-up steps:
#
# 1. Environment Variables -
#    Review the 'env' block.
#    Update the environment variables to obtain values from repo, environment, or organization
#    variables or secrets where applicable.
#    For example, ${{ vars.MY_REPO_VAR }} or ${{ secrets.MY_ORG_SECRET }}
#
# 2. AWS IAM Role ARN -
#    Provide the AWS IAM Role ARN from your GitHub OIDC integration with AWS to allow
#    this workflow to deploy the application.
#    See: https://github.com/marketplace/actions/configure-aws-credentials-for-github-actions
#
# 3. .nvmrc File
#    Ensure that you have a .nvmrc file in the base repo directory.
#    See: https://github.com/nvm-sh/nvm
#
# 4. Environments & Concurrency -
#    The job(s) specify a GitHub environment and concurrency group. Modify the values
#    for your project if using environments. Remove if not using environments.
#    See: https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment
#

name: Leanstacks React Application Deployment

on:
  push:
    branches:
      - $default-branch

env:
  APP_NAME: APPNAME.leanstacks.net # The application name (AWS tags)
  AWS_CFN_STACK_NAME_RESOURCES: ls-ui-APPNAME-resources-ENVCODE # The AWS CloudFormation stack name for the resources
  AWS_CFN_TEMPLATE: template.yml # The AWS CloudFormation template file name or URI
  AWS_ENV_CODE: dev # The AWS environment code, i.e. dev, qa, or prod.
  AWS_REGION: us-east-1 # The AWS region into which the application will be deployed.
  AWS_ROLE_ARN: arn:aws:iam::AWS-ACCOUNT-ID:role/AWS-IAM-ROLE-NAME # The AWS role ARN which grants deployment privileges
  ENV_FILE: ENV_DEV # Environment configuration key-value pairs. Repository secret.
  S3_BUCKET_UI: ui-bucket-name # The AWS S3 bucket into which the application will be deployed.

jobs:
  deploy:
    name: Deploy

    runs-on: ubuntu-latest
    timeout-minutes: 20
    environment: development
    concurrency: development

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js Environment
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: npm

      - name: Install Dependencies
        run: npm ci

      - name: Create Job Metadata
        id: metadata
        run: |
          echo "JOB_DATE=$(date +'%Y%m%d')" >> "$GITHUB_OUTPUT"
          echo "JOB_TIME=$(date +'%H%M%S')" >> "$GITHUB_OUTPUT"

      - name: Create Environment Configuration
        run: |
          echo "${{ env.ENV_FILE }}" > .env
          echo "REACT_APP_VERSION_ID=${{ format('{0}.{1}.{2}', steps.metadata.outputs.JOB_DATE, env.AWS_ENV_CODE, github.run_number) }}" >> .env

      - name: Build
        run: npm run build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy AWS CloudFormation Stack
        run: |-
          aws cloudformation deploy \
          --stack-name ${{ env.AWS_CFN_STACK_NAME_RESOURCES }} \
          --template-file ${{ env.AWS_CFN_TEMPLATE }} \
          --parameter-overrides EnvironmentCode=${{ env.AWS_ENV_CODE }} \
          --tags App=${{ env.APP_NAME }} Env=${{ env.AWS_ENV_CODE }} OU=leanstacks Owner='Matthew Warman'

      - name: Deploy to AWS S3
        run: |
          aws s3 sync build s3://${{ env.S3_BUCKET_UI }} --delete
